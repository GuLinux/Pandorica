#!/bin/bash
outfile="$1"

config_app=""

MAGICK_TYPE=""

if which GraphicsMagick++-config >/dev/null; then
  config_app="GraphicsMagick++-config"
  echo "Found GraphicsMagick" >&2
  MAGICK_TYPE="GraphicsMagick"
fi


if test -z "$MAGICK_TYPE" &&  which Magick++-config >/dev/null; then
  config_app="Magick++-config"
  echo "Found ImageMagick" >&2
  MAGICK_TYPE="ImageMagick"
fi

if test -z "$MAGICK_TYPE"; then
  echo "Neither GraphicsMagick nor ImageMagick were found on your system." >&2
  exit 1
fi

function cfg() {
	if test "x$outfile" == "x"; then
		echo "$@"
	else
		echo "$@" >> "$outfile"
	fi
}

if test "x$outfile" != "x" && [ -r "$outfile" ]; then rm "$outfile"; fi

cppflags="$( $config_app --cppflags)"
for definition in $cppflags; do
	if echo "$definition" | grep "\-D" -q; then
		cfg "add_definitions( $definition )"
	fi
	if echo "$definition" | grep "\-I" -q; then
		MAGICK_INCLUDES="$MAGICK_INCLUDES $( echo "$definition" | sed 's/-I//g')" 
	fi
done

if test -z "$MAGICK_INCLUDES"; then
  if [ -d "/usr/include/$MAGICK_TYPE" ]; then
    MAGICK_INCLUDES="/usr/include/$MAGICK_TYPE"
    echo "$config_app could not found includes, manually selecting $MAGICK_INCLUDES" >&2
  fi
fi

if test -z "$MAGICK_INCLUDES"; then
  echo "$config_app was found, but no includes were found." >&2
  exit 1
fi

cfg "set(MAGICK_INCLUDES $MAGICK_INCLUDES)"
cfg "message(\"Found Magick++ Includes: \${MAGICK_INCLUDES}\")"

ldflags="$( $config_app --libs )"
for lib in $ldflags; do
	MAGICK_LIBS="$MAGICK_LIBS $( echo "$lib")"
done
cfg "set(MAGICK_LIBS $MAGICK_LIBS)"
cfg "message(\"Found Magick++ Libs: \${MAGICK_LIBS}\")"

